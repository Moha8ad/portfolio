{"version":3,"sources":["card/card.component.jsx","card-list/card-list.component.jsx","search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","character","id","name","email","CardList","characters","map","SearchBox","placeholder","changeHandle","type","text","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredCharacters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,YAAYC,IAAG,+BAA0BH,EAAMI,UAAUC,GAA1C,6BACxB,6BAAKL,EAAMI,UAAUE,OACrB,4BAAIN,EAAMI,UAAUG,YCJfC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,WAAWC,KAAI,SAAAN,GAAS,OAC3B,cAAC,EAAD,CAAyBA,UAAWA,GAAzBA,EAAUC,WCHpBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SACba,KAAO,SACPC,KAAM,SACNH,YAAeA,EACfI,SAAYH,MCqCLI,G,wDAxCb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAORa,aAAe,SAAAK,GACb,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SARxB,EAAKC,MAAQ,CACXd,WAAY,GACZW,YAAa,IAJE,E,qDAcnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,WAAWmB,S,oBAG7C,WAAU,IAAD,EAC4BC,KAAKN,MAAhCd,EADD,EACCA,WAAYW,EADb,EACaA,YACdU,EAAqBrB,EAAWsB,QAAO,SAAA3B,GAAS,OACpDA,EAAUE,KAAK0B,cAAcC,SAASb,EAAYY,kBAEpD,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,+BAGA,cAAC,EAAD,CACAW,YAAY,oBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,WAAYqB,W,GAnCZI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4ea0edc8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.style.css'\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"character\" src={`https://robohash.org/${props.character.id}?set=set5&&size=180x180`}/>\r\n        <h3>{props.character.name}</h3>\r\n        <p>{props.character.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.characters.map(character => \r\n            <Card key={character.id} character={character} /> \r\n        )}\r\n    </div>\r\n)","import React from \"react\";\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({ placeholder, changeHandle }) => (\r\n    <input className=\"search\"\r\n        type = \"search\"\r\n        text= \"search\"\r\n        placeholder = {placeholder}\r\n        onChange = {changeHandle}\r\n    />\r\n)","import React, { Component } from 'react';\nimport { CardList } from './card-list/card-list.component';\nimport { SearchBox } from './search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      searchField: ''\n    };\n  }\n\n  changeHandle = e => {\n    this.setState({\n      searchField: e.target.value\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({characters:users}))\n  }\n\n  render() {\n    const { characters, searchField} = this.state;\n    const filteredCharacters = characters.filter(character => (\n      character.name.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return(\n      <div className='App'>\n        <h1 className=\"blinking\">\n        Character Rolodex\n        </h1>\n        <SearchBox \n        placeholder=\"Search Characters\"\n        changeHandle={this.changeHandle}\n        />\n        <CardList characters={filteredCharacters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}